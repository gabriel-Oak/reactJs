{"version":3,"sources":["app/core/theme/index.ts","app/utils/titleService.ts","app/core/api/enviroment.ts","app/core/api/troca-service.ts","app/views/Home/components/Menus.tsx","app/views/Home/components/Loading.tsx","app/utils/auth.ts","app/views/Home/Home.tsx","app/core/api/cardapio-service.ts","app/views/login/Login.tsx","app/core/api/user-service.ts","app/routes/routes.ts","app/views/not-found/not-found.tsx","app/routes/common-routes.tsx","app/routes/routing-module.tsx","app/store/router.store.tsx","app/App.store.ts","app/components/SimpleSnack/snack.stores.ts","app/components/AppBar/index.tsx","app/components/SimpleSnack/index.tsx","app/components/sideNav/index.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","type","setTitle","title","tag","document","querySelector","innerHTML","base","api","user","cardapio","troca","getTrocasUser","id","axios","post","Menus","props","days","state","tabIndex","handleTabChange","bind","event","index","this","setState","menuData","Tabs","value","onChange","indicatorColor","textColor","variant","scrollButtons","aria-label","map","day","key","Tab","label","menu","Card","hidden","className","CardContent","List","ListItem","FormControl","Select","chosed","pratoPrincipal","handleChange","inputProps","name","String","MenuItem","opcao1","opcao2","guarnicao1","guarnicao2","salada","sobremesa","React","Component","NotFound","CircularProgress","size","isAuth","sessionStorage","getItem","getUser","window","location","href","Error","JSON","parse","Home","inject","observer","anchorRef","menus","confirmAction","loading","appStore","getMenus","createRef","handleMenu","handleAction","submitChoice","e","target","_id","then","res","setOptions","data","catch","console","log","finally","trocas","forEach","get","sortMenus","getTrocas","sort","a","b","dateA","Date","getDay","dateB","innerText","sendChanges","verifyTrocas","promises","trocaId","request","put","postChange","submitRequest","Promise","all","snackStore","openSnack","CardHeader","length","CardActions","Button","color","onClick","ref","disabled","Menu","keepMounted","anchorEl","current","open","onClose","Login","senha","touch","snacks","message","redirect","inputChange","handleSubmit","field","setMenus","process","preventDefault","setItem","stringify","setUser","nome","logged","setTimeout","onSubmit","TextField","required","margin","autoComplete","onBlur","onInput","error","getErrors","src","autoPlay","muted","loop","commonRoutes","path","component","exact","adminRoutes","CommonRoutesModule","r","admin","isAdmin","RoutingModule","to","pathname","router","history","push","RouterStore","action","storages","showMenus","observable","computed","snack","AppBarComponent","removeItem","AppBar","position","Toolbar","IconButton","edge","toggleDrawer","Typography","getTitle","logOut","Index","closeSnack","reason","Snackbar","anchorOrigin","vertical","horizontal","getState","autoHideDuration","ContentProps","getMessage","SideNav","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","App","browserHistory","createBrowserHistory","syncHistoryWithStore","showMenu","ThemeProvider","CssBaseline","SimpleSnack","Boolean","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a563928e.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#008c3a',\r\n      main: '#00c853',\r\n      dark: '#33d375',\r\n      contrastText: '#000',\r\n    },\r\n    secondary: {\r\n      light: '#33a361',\r\n      main: '#008c3a',\r\n      dark: '#006228',\r\n      contrastText: '#fff',\r\n    },\r\n    type: 'dark',\r\n  },\r\n});","export const setTitle = (title = 'SMN') => {\r\n    const tag = document.querySelector('title');\r\n    if (tag) tag.innerHTML = 'Gaia - ' + title;\r\n}","const base = 'http://gaia-smn.herokuapp.com';\r\n\r\nexport const api = {\r\n    user: `${base}/usuario/`,\r\n    cardapio: `${base}/cardapio/`,\r\n    troca: `${base}/troca/`\r\n}","\r\nimport { api } from './enviroment';\r\nimport axios from 'axios';\r\n\r\nconst postChange = (troca: any) => {\r\n    return axios.post(`${api.troca}`, troca);\r\n}\r\n\r\nconst putChange = (troca: any) => {\r\n    return axios.put(`${api.troca}`, troca);\r\n}\r\n\r\nconst getTrocasUser = (id?: string) => {\r\n    return axios.post(`${api.troca}/user`, {user: id});\r\n}\r\n\r\nexport {\r\n    postChange,\r\n    putChange,\r\n    getTrocasUser\r\n}","import React, { ReactNode } from 'react'\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Cardapio from '../../../shared/interfaces/menu.interface';\r\nimport './Menus.css';\r\n\r\ninterface Props {\r\n  menuData: Array<Cardapio>,\r\n  handleChange: any\r\n}\r\ninterface State {\r\n  tabIndex: number\r\n}\r\n\r\nclass Menus extends React.Component<Props, State> {\r\n\r\n  days: Array<string>;\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tabIndex: 0,\r\n    }\r\n\r\n    this.days = ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado',];\r\n\r\n    this.handleTabChange = this.handleTabChange.bind(this);\r\n  }\r\n\r\n  handleTabChange(event: React.ChangeEvent<{}>, index: number) {\r\n    this.setState({\r\n      tabIndex: index\r\n    });\r\n  }\r\n\r\n  render(): ReactNode {\r\n    const { menuData } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <Tabs\r\n          value={this.state.tabIndex}\r\n          onChange={this.handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {\r\n            this.days.map(\r\n              (day, key) => key > 0 && key < 6 && <Tab label={day} key={key} />\r\n            )\r\n          }\r\n\r\n        </Tabs>\r\n\r\n        {\r\n          menuData.map(\r\n            (menu: Cardapio, key) => key < 6 &&\r\n              <Card hidden={this.state.tabIndex !== key} key={key} className=\"paper\">\r\n                <CardContent>\r\n                  <List>\r\n                    <ListItem className=\"Home-Menus-ListItem\">\r\n                      <span>Prato Principal</span>\r\n                      <FormControl>\r\n                        <Select\r\n                          value={menu.chosed ? menu.chosed : menu.pratoPrincipal}\r\n                          onChange={this.props.handleChange}\r\n                          inputProps={{\r\n                            name: String(key),\r\n                            className: 'Home-Menus-Chose'\r\n                          }}\r\n                        >\r\n                          <MenuItem value={menu.pratoPrincipal}>{menu.pratoPrincipal}</MenuItem>\r\n                          <MenuItem value={menu.opcao1}>{menu.opcao1}</MenuItem>\r\n                          <MenuItem value={menu.opcao2}>{menu.opcao2}</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </ListItem>\r\n                    <ListItem className=\"Home-Menus-ListItem\">\r\n                      <span>Guarnição 1</span>\r\n                      <span>{menu.guarnicao1}</span>\r\n                    </ListItem>\r\n                    <ListItem className=\"Home-Menus-ListItem\">\r\n                      <span>Guarnição 2</span>\r\n                      <span>{menu.guarnicao2}</span>\r\n                    </ListItem>\r\n                    <ListItem className=\"Home-Menus-ListItem\">\r\n                      <span>Salada</span>\r\n                      <span>{menu.salada}</span>\r\n                    </ListItem>\r\n                    <ListItem className=\"Home-Menus-ListItem\">\r\n                      <span>Sobremesa</span>\r\n                      <span>{menu.sobremesa}</span>\r\n                    </ListItem>\r\n                  </List>\r\n                </CardContent>\r\n              </Card>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menus\r\n","import React, { ReactNode } from 'react'\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport './Loading.css';\r\n\r\ninterface Props { }\r\n\r\nclass NotFound extends React.Component<Props> {\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render(): ReactNode {\r\n    return (\r\n      <div className=\"Home-loading-card\">\r\n        <CircularProgress className=\"Home-loading\" size={100} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFound\r\n","import User from '../shared/interfaces/user.interface';\r\n\r\nconst key = 'GAIA_AUTH_KEY';\r\n\r\nexport const isAuth = (): boolean => {\r\n    return !!sessionStorage.getItem(key);\r\n}\r\n\r\nexport const isAdmin = (): boolean => {\r\n    if (!isAuth()) throw new Error('Usuário não autenticado');\r\n    const user = getUser();\r\n    return !!user.admin;\r\n}\r\n\r\nexport const setUser = (user: User): void => {\r\n    if (user.senha) delete user.senha;\r\n\r\n    sessionStorage.setItem(\r\n        key,\r\n        JSON.stringify(user)\r\n    )\r\n}\r\n\r\nexport const getUser = (): User => {\r\n    if (!isAuth()) {\r\n        window.location.href = '/login'\r\n        throw new Error('Usuário não autenticado');\r\n    }\r\n    const user: any = sessionStorage.getItem(key);\r\n    return JSON.parse(user) as User;\r\n}\r\n\r\nexport const logOut = (): void => {\r\n    sessionStorage.removeItem(key);\r\n    window.location.href = process.env.PUBLIC_URL + '/home';\r\n}","import React from 'react'\r\n\r\nimport { observer, inject } from 'mobx-react';\r\nimport AppStore from '../../App.store';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { setTitle } from '../../utils/titleService';\r\nimport { getMenus } from '../../core/api/cardapio-service';\r\nimport { getTrocasUser, postChange, putChange } from '../../core/api/troca-service';\r\nimport Cardapio from '../../shared/interfaces/menu.interface';\r\nimport Menus from './components/Menus';\r\nimport Loading from './components/Loading';\r\nimport { getUser } from '../../utils/auth';\r\n\r\nimport './Home.css';\r\nimport User from '../../shared/interfaces/user.interface';\r\nimport Troca from '../../shared/interfaces/troca.interface';\r\nimport SnackStore from '../../components/SimpleSnack/snack.stores';\r\n\r\ninterface Props {\r\n  appStore: AppStore,\r\n  snackStore: SnackStore\r\n}\r\ninterface State {\r\n  menus: Array<Cardapio>,\r\n  confirmAction: boolean,\r\n  loading: boolean\r\n}\r\n@inject('appStore', 'snackStore')\r\n@observer\r\nclass Home extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      menus: [],\r\n      confirmAction: false,\r\n      loading: true\r\n    }\r\n\r\n    this.user = getUser();\r\n\r\n    this.props.appStore.setTitle('Home');\r\n    setTitle('Home');\r\n\r\n    this.getMenus();\r\n    this.anchorRef = React.createRef();\r\n    this.handleMenu = this.handleMenu.bind(this);\r\n    this.handleAction = this.handleAction.bind(this);\r\n    this.submitChoice = this.submitChoice.bind(this);\r\n  }\r\n  anchorRef: React.RefObject<HTMLButtonElement>;\r\n  user: User;\r\n\r\n  handleMenu(e: React.ChangeEvent<{ name: number, value: string }>) {\r\n    const menus = this.state.menus;\r\n    menus[e.target.name].chosed = e.target.value;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      menus: menus,\r\n    });\r\n  }\r\n\r\n  getTrocas() {\r\n    getTrocasUser(this.user._id)\r\n      .then((res: {data:[Troca]}) => {\r\n          this.setOptions(res.data);\r\n        })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  setOptions(trocas: Array<Troca>) {\r\n    const menus = this.state.menus;\r\n    trocas.forEach(troca => {\r\n      menus.forEach(menu => {\r\n        if (menu._id === troca.cardapio)\r\n          menu.chosed = troca.pratoPrincipal;\r\n      });\r\n    });\r\n    \r\n    this.setState({menus: menus});\r\n  }\r\n\r\n  getMenus() {\r\n    getMenus()\r\n      .then(res => {\r\n        const menus = this.sortMenus(res.data);        \r\n        this.setState({\r\n          menus: menus\r\n        });\r\n        this.getTrocas();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      })\r\n      .finally(() => {\r\n        this.setState({loading: false });\r\n      })\r\n  }\r\n\r\n  sortMenus(menus: Array<Cardapio>): Array<Cardapio> {\r\n    return menus.sort((a,b) => {\r\n      const dateA = new Date(a.data).getDay();\r\n      const dateB = new Date(b.data).getDay();\r\n      if (dateA > dateB) return 1;\r\n      else if (dateA < dateB) return -1;\r\n      else return 0;\r\n    });\r\n  }\r\n\r\n  handleAction(e: any) {\r\n    this.setState({\r\n      confirmAction: false\r\n    })\r\n\r\n    e.target.innerText === 'Sim' && this.sendChanges();\r\n  }\r\n\r\n  sendChanges() {\r\n    this.setState({ loading: true });\r\n    getTrocasUser(this.user._id)\r\n      .then(res => {\r\n          this.verifyTrocas(res.data);\r\n        })\r\n      .catch(e => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n\r\n  verifyTrocas(trocas: Array<Troca>) {\r\n    \r\n    const promises = this.state.menus.map(menu => {\r\n      let trocaId;\r\n      trocas.forEach(troca => {\r\n        if (troca.cardapio === menu._id) {\r\n          trocaId = troca._id;\r\n        } \r\n      });\r\n\r\n      const request = {\r\n        user: this.user._id,\r\n        cardapio: menu._id,\r\n        pratoPrincipal: menu.chosed ? menu.chosed : menu.pratoPrincipal,\r\n        _id: trocaId\r\n      };\r\n\r\n      if(trocaId) {\r\n        return putChange(request)\r\n      } else {\r\n        return postChange(request)\r\n      }\r\n    });\r\n\r\n    this.submitRequest(promises);\r\n  }\r\n  \r\n  async submitRequest(promises: Array<Promise<any>>) {\r\n    await Promise.all(promises)\r\n    .then(\r\n      res => this.props.snackStore.openSnack('Sucesso au atualizar todos os dias')\r\n    )\r\n    .catch(\r\n      e => this.props.snackStore.openSnack('Ocorreu algum erro: ' + e)\r\n    )\r\n    .finally(() => {\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  submitChoice() {\r\n    this.setState({\r\n      confirmAction: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home Center-container-Vertical s840\">\r\n        <Card className=\"Home-card\">\r\n          <CardHeader title=\"Trocar Prato Principal\" />\r\n          <CardContent>\r\n            {\r\n              this.state.menus.length \r\n              ? <Menus menuData={this.state.menus} handleChange={this.handleMenu} />\r\n              : this.state.loading && <Loading />\r\n            }\r\n          </CardContent>\r\n\r\n          <CardActions className=\"button-container\">\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              onClick={this.submitChoice}\r\n              ref={this.anchorRef}\r\n              disabled={this.state.loading}\r\n            >\r\n              {this.state.loading ? <CircularProgress size={24} /> : 'Trocar'}\r\n            </Button>\r\n\r\n            <Menu\r\n              keepMounted\r\n              anchorEl={this.anchorRef.current}\r\n              open={this.state.confirmAction}\r\n              onClose={this.handleAction}\r\n            >\r\n              <h4 className=\"Home-confirm-title\">Confirmar troca?</h4>\r\n              <MenuItem onClick={this.handleAction}>Sim</MenuItem>\r\n              <MenuItem onClick={this.handleAction}>Não</MenuItem>\r\n            </Menu>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import { api } from './enviroment';\r\nimport axios from 'axios';\r\n\r\nconst getMenus = () => {\r\n    return axios.get(`${api.cardapio}`);\r\n}\r\n\r\nconst setMenus = () => {\r\n    return axios.get(`${api.cardapio}`);\r\n}\r\n\r\nexport {\r\n    getMenus,\r\n    setMenus\r\n}","import React from 'react'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport AppStore from '../../App.store';\r\nimport SnackStore from '../../components/SimpleSnack/snack.stores';\r\n\r\nimport { setTitle } from '../../utils/titleService';\r\nimport * as UserService from '../../core/api/user-service';\r\nimport { setUser, isAuth } from '../../utils/auth';\r\nimport './Login.css';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\ninterface Props {\r\n  appStore: AppStore,\r\n  snackStore: SnackStore\r\n}\r\n\r\ninterface State {\r\n  user: string,\r\n  senha: string\r\n  touch: {\r\n    user: boolean,\r\n    senha: boolean\r\n  }\r\n  loading: boolean\r\n  snacks: {\r\n    state: boolean,\r\n    message: string\r\n  }\r\n}\r\n\r\n@inject('appStore', 'snackStore')\r\n@observer\r\nclass Login extends React.Component<Props> {\r\n  state: State;\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      user: '',\r\n      senha: '',\r\n      touch: {\r\n        user: false,\r\n        senha: false,\r\n      },\r\n      loading: false,\r\n      snacks: {\r\n        state: false,\r\n        message: ''\r\n      }\r\n    }\r\n\r\n    if (isAuth()) this.redirect();\r\n\r\n    setTitle('Login');\r\n    this.inputChange = this.inputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  inputChange(e: any): void {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      touch: {\r\n        ...this.state.touch,\r\n        [e.target.name]: true\r\n      }\r\n    });\r\n  }\r\n\r\n  getErrors(field: 'user' | 'senha'): boolean {\r\n    return !this.state[field] && this.state.touch[field];\r\n  }\r\n\r\n  redirect(): void {\r\n    this.props.appStore.setMenus(true);\r\n    window.location.href = process.env.PUBLIC_URL + '/home';\r\n  }\r\n\r\n  handleSubmit(event: React.FormEvent<HTMLFormElement>): void {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    UserService\r\n      .login({\r\n        user: this.state.user,\r\n        senha: this.state.senha\r\n      })\r\n      .then((res: any) => {\r\n\r\n        setUser(res.data);\r\n        this.props.snackStore.openSnack(`Bem vindo ${res.data.nome}`);\r\n        this.logged();\r\n\r\n      })\r\n      .catch(e => this.props.snackStore.openSnack('Algo deu errado :/'))\r\n      .finally(() => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      });\r\n  }\r\n\r\n  logged() {    \r\n    setTimeout(() => {\r\n      this.redirect();\r\n    }, 2000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login-deep\">\r\n        <div className=\"Login Center-container s600\">\r\n          <Card>\r\n\r\n            <CardHeader title=\"GAIA - SMN\" />\r\n\r\n            <form onSubmit={this.handleSubmit}>\r\n              <CardContent className=\"Login-form\">\r\n\r\n                <TextField\r\n                  required\r\n                  label=\"Usuário\"\r\n                  className=\"Login-form-field\"\r\n                  name=\"user\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  autoComplete=\"off\"\r\n                  onBlur={this.inputChange}\r\n                  onInput={this.inputChange}\r\n                  value={this.state.user}\r\n                  error={this.getErrors('user')}\r\n                />\r\n\r\n                <TextField\r\n                  required\r\n                  label=\"Senha\"\r\n                  className=\"Login-form-field\"\r\n                  name=\"senha\"\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  autoComplete=\"off\"\r\n                  onBlur={this.inputChange}\r\n                  onInput={this.inputChange}\r\n                  value={this.state.senha}\r\n                  error={this.getErrors('senha')}\r\n                />\r\n\r\n\r\n              </CardContent>\r\n              <CardActions className=\"button-container\">\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading ? <CircularProgress size={24} /> : 'Entrar'}\r\n                </Button>\r\n              </CardActions>\r\n            </form>\r\n\r\n          </Card>\r\n        </div>\r\n        <div className=\"Login-banner\">\r\n          <video src=\"banner.mp4\" autoPlay muted loop></video>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import { api } from './enviroment';\r\nimport axios from 'axios';\r\nimport User from '../../shared/interfaces/user.interface';\r\n\r\nconst login = (user: User) => {\r\n    return axios.post(`${api.user}${user.user}`, user);\r\n}\r\n\r\nexport {\r\n    login\r\n}","import { RouteProps } from 'react-router-dom';\r\nimport Home from '../views/Home/Home';\r\nimport Login from '../views/login/Login';\r\n\r\nconst publicUrl = process.env.PUBLIC_URL;\r\n\r\nexport const commonRoutes: RouteProps[] = [\r\n    { path: `${publicUrl}/login`, component: Login, exact: true },\r\n    { path: `${publicUrl}/home`, component: Home, exact: true }\r\n];\r\n\r\nexport const adminRoutes: RouteProps[] = [\r\n    { path: `${publicUrl}/cardapio`, component: Home, exact: true }\r\n];","import React, { ReactNode } from 'react'\r\n\r\ninterface Props {}\r\n\r\nclass NotFound extends React.Component {\r\n    constructor(props: Props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <h1>Not found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\r\n\r\nimport { Route, Switch, RouteProps } from 'react-router-dom';\r\nimport { commonRoutes, adminRoutes } from './routes';\r\nimport NotFound from '../views/not-found/not-found';\r\nimport { isAdmin } from '../utils/auth';\r\n\r\ninterface Props { }\r\n\r\nclass CommonRoutesModule extends React.Component {\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const publicUrl = process.env.PUBLIC_URL;\r\n\r\n    return (\r\n      <Switch>\r\n        {\r\n          commonRoutes.map((r: RouteProps, index: number) => (\r\n            <Route key={index} {...r} />\r\n          ))\r\n        }\r\n        {\r\n          isAdmin()\r\n          &&\r\n          adminRoutes.map((r: RouteProps, index: number) => (\r\n            <Route key={index} {...r} />\r\n          ))\r\n        }\r\n        <Route path={`${publicUrl}/**`} component={NotFound} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonRoutesModule\r\n","import React from 'react'\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport CommonRoutesModule from '../routes/common-routes';\r\nimport { isAuth } from '../utils/auth';\r\nimport Login from '../views/login/Login';\r\n\r\ninterface Props { }\r\ninterface State { }\r\n\r\nclass RoutingModule extends React.Component {\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const publicUrl = process.env.PUBLIC_URL;\r\n\r\n    return (\r\n      <Switch>\r\n        <Route path={`${publicUrl}/login`} component={Login} />\r\n        {          \r\n          isAuth()\r\n          ? <CommonRoutesModule />\r\n          : <Redirect to={{ pathname: `${publicUrl}/login` }} />          \r\n        }\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoutingModule\r\n","import { RouterStore } from 'mobx-react-router';\r\nimport { action } from 'mobx';\r\n\r\nexport default class RouterStorage extends RouterStore{\r\n\r\n    @action setHistory(path: string) {\r\n        this.history.push(`${process.env.PUBLIC_URL}/${path}`);\r\n    }\r\n}\r\n\r\nexport const router = new RouterStorage();","import { observable, computed, action } from \"mobx\";\r\n\r\nexport default class AppStore {\r\n    @observable storages: any = { \r\n        showMenus: false,\r\n        title: ''\r\n    }\r\n\r\n    @computed get getMenus(): boolean {\r\n        return this.storages.showMenus;\r\n    }\r\n\r\n    @computed get getTitle(): boolean {\r\n        return this.storages.title;\r\n    }\r\n\r\n    @action setMenus(state: boolean): void {\r\n        this.storages.showMenus = state;\r\n    }\r\n\r\n    @action setTitle(state: string): void {\r\n        this.storages.title = state;\r\n    }\r\n}\r\n\r\nconst appStore = new AppStore();\r\nexport {appStore}","import { observable, computed, action } from \"mobx\";\r\n\r\nexport default class SnackStore {\r\n    @observable snack: any = { \r\n        state: false,\r\n        message: ''\r\n    }\r\n\r\n    @computed get getMessage(): string {\r\n        return this.snack.message;\r\n    }\r\n\r\n    @computed get getState(): boolean {\r\n        return this.snack.state;\r\n    }\r\n\r\n    @action closeSnack(state: boolean): void {\r\n        this.snack.state = state;\r\n        this.snack.message = '';\r\n    }\r\n\r\n    @action openSnack(message: string): void {\r\n        this.snack.message = message;\r\n        this.snack.state = true;\r\n    }\r\n}\r\n\r\nconst snackStore = new SnackStore();\r\nexport {snackStore}","import React, { ReactNode } from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport { logOut } from '../../utils/auth';\r\nimport './appBar.css';\r\n\r\ninterface State {}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass AppBarComponent extends React.Component<any, State> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    logOut();\r\n  }\r\n\r\n  render(): ReactNode {\r\n    return (\r\n      <AppBar position=\"fixed\" color=\"primary\" className=\"AppBarComponent\">\r\n        <Toolbar>\r\n          <IconButton \r\n            edge=\"start\" \r\n            color=\"inherit\" \r\n            aria-label=\"menu\"\r\n            onClick={this.props.toggleDrawer}\r\n          >\r\n            <i className=\"material-icons\">\r\n              menu\r\n            </i>\r\n          </IconButton>\r\n          <Typography className=\"AppBar-title\" variant=\"h6\">\r\n            {this.props.appStore.getTitle}\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={this.logOut}>\r\n            Sair\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppBarComponent\r\n","import React, { ReactNode } from 'react'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport './snack.css';\r\n\r\ninterface State { }\r\n\r\n@inject('snackStore')\r\n@observer\r\nclass Index extends React.Component<any, State> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n\r\n    }    \r\n    this.closeSnack = this.closeSnack.bind(this);\r\n  }\r\n\r\n  closeSnack(event: any, reason: any) {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    \r\n    this.props.snackStore.closeSnack(false);\r\n  }\r\n\r\n  render(): ReactNode {\r\n\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={this.props.snackStore.getState}\r\n        autoHideDuration={6000}\r\n        onClose={this.closeSnack}\r\n        ContentProps={{\r\n          'aria-describedby': 'message-id',\r\n        }}\r\n        message={<span>{this.props.snackStore.getMessage}</span>}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n","import React, { ReactNode } from 'react'\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\n\r\ninterface Props { }\r\ninterface State { }\r\n\r\nclass SideNav extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render(): ReactNode {\r\n        return (\r\n            <div className=\"App-SideNav\">\r\n                <TreeView\r\n                    defaultCollapseIcon={<ExpandMoreIcon />}\r\n                    defaultExpandIcon={<ChevronRightIcon />}\r\n                >\r\n                    <TreeItem nodeId=\"1\" label=\"Administrativo\">\r\n                        <TreeItem nodeId=\"2\" label=\"Alterar cardapio\" />\r\n                        <TreeItem nodeId=\"3\" label=\"Cadastro de usuário\" />\r\n                        <TreeItem nodeId=\"4\" label=\"Pedidos de trocas\" />\r\n                        <TreeItem nodeId=\"5\" label=\"Sugestões e bugs\" />\r\n                    </TreeItem>\r\n                    <TreeItem nodeId=\"6\" label=\"Opções\">\r\n                        <TreeItem nodeId=\"6\" label=\"Cardapios\"/>\r\n                        <TreeItem nodeId=\"7\" label=\"Reportar bug/sugestão\"/>\r\n                    </TreeItem>\r\n                </TreeView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideNav\r\n","import React, { ReactNode } from 'react';\r\nimport './App.css';\r\nimport { theme } from './core/theme';\r\n\r\nimport { Router } from 'react-router-dom';\r\nimport RoutingModule from './routes/routing-module';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\nimport { syncHistoryWithStore } from 'mobx-react-router';\r\n\r\nimport { router } from './store/mobex';\r\nimport AppStore from './App.store';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport SwipeableDrawer from '@material-ui/core/Drawer';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport { isAuth } from './utils/auth';\r\nimport AppBarComponent from './components/AppBar/';\r\nimport SimpleSnack from './components/SimpleSnack/';\r\nimport SideNav from './components/sideNav/';\r\n\r\ninterface Props {\r\n  appStore?: AppStore\r\n}\r\n\r\ninterface State {\r\n  menu: boolean\r\n}\r\n\r\n@inject('appStore')\r\n@observer\r\nclass App extends React.Component<any> {\r\n  state: State;\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      menu: false\r\n    }\r\n\r\n    if (isAuth()) {\r\n      this.props.appStore.setMenus(true);\r\n    }\r\n    this.toggleDrawer = this.toggleDrawer.bind(this);\r\n  }\r\n\r\n  toggleDrawer() {\r\n    this.setState({menu: !this.state.menu});\r\n  }\r\n\r\n  render(): ReactNode {\r\n\r\n    const browserHistory = createBrowserHistory();\r\n    const history = syncHistoryWithStore(browserHistory, router);\r\n    const showMenu = this.props.appStore ? this.props.appStore.getMenus : null;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <div className=\"Gaia\">\r\n          {\r\n            showMenu &&\r\n            <AppBarComponent toggleDrawer={this.toggleDrawer} />\r\n          }\r\n          <SwipeableDrawer open={this.state.menu} onClose={this.toggleDrawer}>\r\n            <SideNav />\r\n          </SwipeableDrawer>\r\n          <Router history={history}>\r\n            <RoutingModule />\r\n          </Router>\r\n        </div>\r\n\r\n        <SimpleSnack />\r\n      </ThemeProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport { Provider } from 'mobx-react';\r\nimport * as store from './app/store/mobex';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider {...store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}